on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_call:

permissions:
  contents: read

name: CI
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - 'ubuntu-latest'
        python-version:
          - '3.10'
          - '3.11'
          - '3.12'
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Install msodbcsql18
        run: |
          sudo apt-get update
          sudo apt-get install -y msodbcsql18
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install the project
        run: uv sync --all-extras --dev
      - name: Check formatting
        run: uv run ruff check
      - name: Run tests
        run: uv run pytest -n0

  integration-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - 'ubuntu-latest'
        python-version:
          - '3.11'
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{matrix.python-version}}
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}
          cache: 'pip' # caching pip dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e '.' # do not install dev dependencies or other extras
      - name: Test datacontract --help
        run: datacontract --help
      - name: Test datacontract --version
        run: datacontract --version
      - name: Test datacontract init
        run: datacontract init new-datacontract.yaml
      - name: Test datacontract test
        run: cd tests && datacontract test fixtures/local-delta/datacontract.yaml
      - name: Test datacontract export
        run: datacontract export --format odcs tests/fixtures/export/datacontract.yaml

  docker:
    runs-on: ubuntu-latest
    needs:
      - test
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            datacontract/cli
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          # linux/arm64 is disabled
          # duckdb currently does not support linux_arm64_gcc4
          # https://duckdb.org/docs/extensions/working_with_extensions#platforms
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: datacontract/cli:snapshot-latest
          labels: ${{ steps.meta.outputs.labels }}
          sbom: true
