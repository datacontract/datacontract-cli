[project]
name = "datacontract-cli"
version = "0.10.16"
description = "The datacontract CLI is an open source command-line tool for working with Data Contracts. It uses data contract YAML files to lint the data contract, connect to data sources and execute schema and quality tests, detect breaking changes, and export to different formats. The tool is written in Python. It can be used as a standalone CLI tool, in a CI/CD pipeline, or directly as a Python library."
readme = "README.md"
authors = [
  { name = "Jochen Christ", email = "jochen.christ@innoq.com" },
  { name = "Stefan Negele", email = "stefan.negele@innoq.com" },
  { name = "Simon Harrer", email = "simon.harrer@innoq.com" },
]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
requires-python = ">=3.10"
dependencies = [
  "typer>=0.12,<0.16",
  "pydantic>=2.8.2,<2.11.0",
  "pyyaml~=6.0.1",
  "requests>=2.31,<2.33",
  "fastapi==0.115.6", # move to extra?
  "uvicorn==0.32.1", # move to extra?
  "fastjsonschema>=2.19.1,<2.22.0",
  "fastparquet==2024.11.0",
  "python-multipart==0.0.19",
  "rich>=13.7,<13.10",
  "simple-ddl-parser==1.7.1",
  "duckdb==1.1.3",
  "soda-core-duckdb>=3.3.1,<3.5.0",
  # remove setuptools when https://github.com/sodadata/soda-core/issues/2091 is resolved
  "setuptools>=60",
  "python-dotenv~=1.0.0",
  "rdflib==7.0.0", # move to extra?
  "opentelemetry-exporter-otlp-proto-grpc~=1.16", # move to extra?
  "opentelemetry-exporter-otlp-proto-http~=1.16", # move to extra?
  "boto3>=1.34.41,<1.35.69",
  #  "botocore>=1.34.41,<1.34.137",
  "jinja_partials >= 0.2.1",
]

[project.optional-dependencies]

avro = [
  "avro==1.12.0"
]

bigquery = [
  "soda-core-bigquery>=3.3.1,<3.5.0",
  "google-cloud-bigquery-storage>=2.27.0",
  "grpcio==1.62.3" # avoid strange log output in newer versions
]

databricks = [
  "soda-core-spark-df>=3.3.1,<3.5.0",
  "databricks-sql-connector>=3.1.2,<3.7.0",
  "databricks-sdk>=0.32.0,<0.39.0",
  "soda-core-spark[databricks]>=3.3.1,<3.5.0"
]

iceberg = [
  "pyiceberg==0.8.1"
]

kafka = [
  "datacontract-cli[avro]",
  "soda-core-spark-df>=3.3.1,<3.5.0"
]

postgres = [
  "soda-core-postgres>=3.3.1,<3.5.0"
]

s3 = [
  "s3fs==2024.10.0"
]

snowflake = [
  "snowflake-connector-python[pandas]>=3.6,<3.13",
  "soda-core-snowflake>=3.3.1,<3.5.0"
]

sqlserver = [
  "soda-core-sqlserver>=3.3.1,<3.5.0"
]

trino = [
  "soda-core-trino>=3.3.1,<3.5.0"
]

dbt = [
  "dbt-core>=1.8.0"
]

dbml = [
  "pydbml>=1.1.1"
]

parquet = [
  "pyarrow>=12.0.0"
]

all = [
  "datacontract-cli[kafka,bigquery,snowflake,postgres,databricks,sqlserver,s3,trino,dbt,dbml,iceberg,parquet]"
]

dev = [
  "datacontract-cli[all]",
  "httpx==0.28.1",
  "kafka-python",
  "moto==5.0.24",
  "pandas>=2.1.0",
  "pre-commit>=3.7.1,<4.1.0",
  "pytest",
  "pytest-xdist",
  "pymssql==2.3.2",
  "ruff",
  "testcontainers[minio,postgres,kafka,mssql]==4.9.0",
  "trino==0.330.0",
]

[project.urls]
Homepage = "https://cli.datacontract.com"
Issues = "https://github.com/datacontract/datacontract-cli/issues"

[project.scripts]
datacontract = "datacontract.cli:app"

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
#addopts = "-n 8" # run tests in parallel, you can disable parallel test execution with "pytest -n0" command
log_level = "INFO"
#log_cli = "true" #  activate live logging, do not use with -n 8 xdist option for parallel test execution: https://github.com/pytest-dev/pytest-xdist/issues/402
log_cli_level = "INFO"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
extend-select = [
    "I",   # re-order imports in alphabetic order
]
