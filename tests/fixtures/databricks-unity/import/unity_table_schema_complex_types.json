{
  "name": "test_table",
  "catalog_name": "string",
  "schema_name": "string",
  "table_type": "MANAGED",
  "comment": "The 'test_table' contains various data types like strings, structures, arrays, and maps. It includes nested structures, arrays of integers and structures, maps with string keys and integer values, maps with integer keys and struct values, and a JSON column. This table can be used to test and validate data structures and their interactions in a controlled environment. It can also be used to analyze the distribution of data types and their relationships within the table.",
  "data_source_format": "DELTA",
  "columns": [
    {
      "comment": "Unique identifier for each test record.",
      "name": "id",
      "nullable": false,
      "position": 0,
      "type_json": "{\"name\":\"id\",\"type\":\"integer\",\"nullable\":false,\"metadata\":{\"comment\":\"Unique identifier for each test record.\"}}",
      "type_name": "INT",
      "type_precision": 0,
      "type_scale": 0,
      "type_text": "int"
    },
    {
      "comment": "Name of the test, providing a human-readable label for identification.",
      "name": "name",
      "nullable": true,
      "position": 1,
      "type_json": "{\"name\":\"name\",\"type\":\"string\",\"nullable\":true,\"metadata\":{\"comment\":\"Name of the test, providing a human-readable label for identification.\"}}",
      "type_name": "STRING",
      "type_precision": 0,
      "type_scale": 0,
      "type_text": "string"
    },
    {
      "comment": "Represents a nested structure with multiple levels of data.",
      "name": "nested_struct",
      "nullable": true,
      "position": 2,
      "type_json": "{\"name\":\"nested_struct\",\"type\":{\"type\":\"struct\",\"fields\":[{\"name\":\"field1\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"field2\",\"type\":\"integer\",\"nullable\":true,\"metadata\":{}}]},\"nullable\":true,\"metadata\":{\"comment\":\"Represents a nested structure with multiple levels of data.\"}}",
      "type_name": "STRUCT",
      "type_precision": 0,
      "type_scale": 0,
      "type_text": "struct<field1:string,field2:int>"
    },
    {
      "comment": "An array of integers, allowing for the storage of multiple integer values.",
      "name": "array_int",
      "nullable": true,
      "position": 3,
      "type_json": "{\"name\":\"array_int\",\"type\":{\"type\":\"array\",\"elementType\":\"integer\",\"containsNull\":true},\"nullable\":true,\"metadata\":{\"comment\":\"An array of integers, allowing for the storage of multiple integer values.\"}}",
      "type_name": "ARRAY",
      "type_precision": 0,
      "type_scale": 0,
      "type_text": "array<int>"
    },
    {
      "comment": "An array of structured data, where each element is a separate record.",
      "name": "array_struct",
      "nullable": true,
      "position": 4,
      "type_json": "{\"name\":\"array_struct\",\"type\":{\"type\":\"array\",\"elementType\":{\"type\":\"struct\",\"fields\":[{\"name\":\"sub_field1\",\"type\":\"string\",\"nullable\":true,\"metadata\":{}},{\"name\":\"sub_field2\",\"type\":\"double\",\"nullable\":true,\"metadata\":{}}]},\"containsNull\":true},\"nullable\":true,\"metadata\":{\"comment\":\"An array of structured data, where each element is a separate record.\"}}",
      "type_name": "ARRAY",
      "type_precision": 0,
      "type_scale": 0,
      "type_text": "array<struct<sub_field1:string,sub_field2:double>>"
    },
    {
      "comment": "A map with string keys and integer values, allowing for the storage of key-value pairs.",
      "name": "map_string_int",
      "nullable": true,
      "position": 5,
      "type_json": "{\"name\":\"map_string_int\",\"type\":{\"type\":\"map\",\"keyType\":\"string\",\"valueType\":\"integer\",\"valueContainsNull\":true},\"nullable\":true,\"metadata\":{\"comment\":\"A map with string keys and integer values, allowing for the storage of key-value pairs.\"}}",
      "type_name": "MAP",
      "type_precision": 0,
      "type_scale": 0,
      "type_text": "map<string,int>"
    },
    {
      "comment": "A map with integer keys and structured data values, allowing for the storage of key-value pairs with integer keys.",
      "name": "map_int_struct",
      "nullable": true,
      "position": 6,
      "type_json": "{\"name\":\"map_int_struct\",\"type\":{\"type\":\"map\",\"keyType\":\"integer\",\"valueType\":{\"type\":\"struct\",\"fields\":[{\"name\":\"map_struct_field1\",\"type\":\"boolean\",\"nullable\":true,\"metadata\":{}},{\"name\":\"map_struct_field2\",\"type\":\"float\",\"nullable\":true,\"metadata\":{}}]},\"valueContainsNull\":true},\"nullable\":true,\"metadata\":{\"comment\":\"A map with integer keys and structured data values, allowing for the storage of key-value pairs with integer keys.\"}}",
      "type_name": "MAP",
      "type_precision": 0,
      "type_scale": 0,
      "type_text": "map<int,struct<map_struct_field1:boolean,map_struct_field2:float>>"
    },
    {
      "comment": "A column storing JSON data, allowing for the storage of complex, hierarchical data structures.",
      "name": "json_column",
      "nullable": true,
      "position": 7,
      "type_json": "{\"name\":\"json_column\",\"type\":\"string\",\"nullable\":true,\"metadata\":{\"comment\":\"A column storing JSON data, allowing for the storage of complex, hierarchical data structures.\"}}",
      "type_name": "STRING",
      "type_precision": 0,
      "type_scale": 0,
      "type_text": "string"
    }
  ],
  "enable_predictive_optimization": "DISABLE",
  "metastore_id": "string",
  "full_name": "my_catalog.my_schema.test_table",
  "data_access_configuration_id": "string",
  "created_at": 0,
  "created_by": "string",
  "updated_at": 0,
  "updated_by": "string",
  "deleted_at": 0,
  "table_id": "test_table",
  "delta_runtime_properties_kvpairs": {
    "delta_runtime_properties": {
      "property1": "string",
      "property2": "string"
    }
  },
  "effective_predictive_optimization_flag": {
    "value": "DISABLE",
    "inherited_from_type": "CATALOG",
    "inherited_from_name": "string"
  },
  "pipeline_id": "string",
  "browse_only": true
}