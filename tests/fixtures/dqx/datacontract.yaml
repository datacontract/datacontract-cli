dataContractSpecification: 1.1.0

id: data-contract-example_user_interactions_enhanced

info:
  title: user_interactions
  version: 2.0.0
  owner: Example Team
  contact:
    name: John Doe
    email: john.doe@example.com

servers:
  development:
    type: databricks
    catalog: dev_catalog
    schema: dev_schema
  production:
    type: databricks
    catalog: prod_catalog
    schema: prod_schema

terms:
  usage: Analysis of user behavior on the platform
  limitations: Not for real-time decision making
  billing: Contact data engineering

servicelevels:
  availability:
    description: Available 24/7
    percentage: 99.99%
  retention:
    description: Data retained for 1 year
    period: P1Y
    unlimited: false
  latency:
    description: Data available within 1 hour
    threshold: 1h
  frequency:
    description: Data updated every 15 minutes
    type: streaming
    interval: 15 minutes
  support:
    description: Support available during business hours
    time: 9am - 5pm PST
    responseTime: 30 minutes

links:
  documentation: https://example.com/documentation

models:
  datacontract_test_with_quality:
    type: table
    description: Table containing user interaction data on the platform.
    fields:
      interaction_id:
        type: string
        required: true
        primary: true
        description: Unique identifier for the interaction.
        quality:
          - type: custom
            engine: dqx
            specification:
              criticality: error
              check:
                function: is_not_null
      user_id:
        type: string
        required: true
        description: Unique identifier for the user.
        quality:
          - type: custom
            engine: dqx
            specification:
              criticality: error
              check:
                function: is_not_null
          - type: custom
            engine: dqx
            specification:
              criticality: error
              check:
                function: foreign_key
                arguments:
                  ref_columns:
                    - id
                  ref_table: catalog1.schema1.user
          - type: custom
            engine: dqx
            specification:
              criticality: error
              check:
                function: is_unique
      interaction_type:
        type: string
        required: true
        description: Type of interaction (e.g., click, view, purchase).
        quality:
          - type: custom
            engine: dqx
            specification:
              criticality: error
              check:
                function: is_in_list
                arguments:
                  allowed:
                    - click
                    - view
                    - purchase
                    - like
                    - share
      interaction_timestamp:
        type: timestamp
        required: true
        description: Timestamp of the interaction.
        quality:
          - type: custom
            engine: dqx
            specification:
              criticality: error
              check:
                function: is_valid_timestamp
                arguments:
                  timestamp_format: "yyyy-MM-dd HH:mm:ss"
          - type: custom
            engine: dqx
            specification:
              criticality: warning
              check:
                function: not_in_future
                arguments:
                  offset: 1h
      item_id:
        type: string
        required: false
        description: Identifier of the item interacted with.
        quality:
          - type: custom
            engine: dqx
            specification:
              criticality: minor
              check:
                function: is_not_null
      interaction_value:
        type: integer
        required: false
        description: Value associated with the interaction (e.g., amount spent).
        quality:
          - type: custom
            engine: dqx
            specification:
              criticality: minor
              check:
                function: is_in_range
                arguments:
                  min_limit: 0
                  max_limit: 1000
      location:
        type: string
        required: false
        description: User's location during the interaction.
        quality:
          - type: custom
            engine: dqx
            specification:
              criticality: minor
              check:
                function: regex_match
                arguments:
                  regex: "^[A-Za-z]+(?:[\\s-][A-Za-z]+)*$"
      device:
        type: string
        required: false
        description: User's device during the interaction.
        quality:
          - type: custom
            engine: dqx
            specification:
              criticality: minor
              check:
                function: is_in_list
                arguments:
                  allowed:
                    - mobile
                    - desktop
                    - tablet
      interaction_date:
        type: string
        required: true
        description: Date of the interaction.
        quality:
          - type: custom
            engine: dqx
            specification:
              criticality: error
              check:
                function: is_valid_date
                arguments:
                  date_format: "yyyy-MM-dd"
      time_since_last_interaction:
        type: integer
        required: false
        description: Time since the user's last interaction (in days).
        quality:
          - type: custom
            engine: dqx
            specification:
              criticality: minor
              check:
                function: is_older_than_n_days
                arguments:
                  days: 30
      is_active:
          type: boolean
          required: false
          description: Flag indicating if the user is still active
          quality:
            - type: custom
              engine: dqx
              specification:
                criticality: minor
                check:
                  function: sql_expression
                  arguments:
                    expression: "is_active IN ('true', 'false')"
      user_profile:
        type: struct
        required: false
        description: User profile information.
        fields:
          age:
            type: integer
            required: false
            description: User's age.
            quality:
              - type: custom
                engine: dqx
                specification:
                  criticality: minor
                  check:
                    function: is_in_range
                    arguments:
                      min_limit: 13
                      max_limit: 120
          gender:
            type: string
            required: false
            description: User's gender.
            quality:
              - type: custom
                engine: dqx
                specification:
                  criticality: minor
                  check:
                    function: is_in_list
                    arguments:
                      allowed:
                        - male
                        - female
                        - other
          location_details:
            type: struct
            required: false
            description: Nested location information.
            fields:
              city:
                type: string
                required: false
                description: User's city.
              country:
                type: string
                required: false
                description: User's country.
                quality:
                  - type: custom
                    engine: dqx
                    specification:
                      criticality: minor
                      check:
                        function: regex_match
                        arguments:
                          regex: "^[A-Z]{2}$"  #ISO country code
      related_items:
        type: array
        required: false
        description: List of item IDs related to this interaction.
        items:
          type: string
        quality:
          - type: custom
            engine: dqx
            specification:
              criticality: minor
              check:
                function: is_not_null_and_not_empty_array
      interaction_context:
        type: struct
        required: false
        description: Contextual information about the interaction.
        fields:
          page_url:
            type: string
            required: false
            description: URL of the page where the interaction occurred.
            quality:
              - type: custom
                engine: dqx
                specification:
                  criticality: minor
                  check:
                    function: regex_match
                    arguments:
                      regex: "^https?://.+$"  # Basic URL regex
          device_type:
            type: string
            required: false
            description: Type of device used for the interaction.
            quality:
              - type: custom
                engine: dqx
                specification:
                  criticality: minor
                  check:
                    function: is_in_list
                    arguments:
                      allowed:
                        - mobile
                        - desktop
                        - tablet
                        - tv

    quality:
      - type: custom
        description: All quality rules for valid user interactions.
        engine: dqx
        specification:
          criticality: "error"
          filter: "interaction_type IN ('click', 'view', 'purchase')"  # Example Filter
          check:
            function: "is_not_null"
            for_each_column:
              - user_id
              - interaction_id
              - interaction_type
              - interaction_timestamp
      - type: custom
        description: Item value present and within range for purchases.
        engine: dqx
        specification:
          criticality: "warning"
          filter: "interaction_type = 'purchase'"
          check:
            function: "is_in_range"
            arguments:
              column: interaction_value
              min_limit: 0
              max_limit: 1000
      - type: custom
        description: Valid device type for mobile interactions
        engine: dqx
        specification:
          criticality: "minor"
          filter: "device = 'mobile'"
          check:
            function: "is_in_list"
            arguments:
              column: device
              allowed:
                - mobile
                - tablet
      - type: custom
        description: Age should be within limits
        engine: dqx
        specification:
          criticality: "minor"
          filter: "user_profile.age IS NOT NULL"
          check:
            function: "is_in_range"
            arguments:
              column: user_profile.age
              min_limit: 13
              max_limit: 120
      - type: custom
        description: User_id has to be unique per day.
        engine: dqx
        specification:
          criticality: error
          check:
            function: is_unique
            arguments:
              columns:
                - user_id
                - interaction_date
      - type: custom
        description: Interaction value has to be under 1000
        engine: dqx
        specification:
          criticality: error
          filter: "interaction_type = 'purchase'"
          check:
            function: is_aggr_not_greater_than
            arguments:
              column: interaction_value
              aggr_type: max
              limit: 1000
      - type: custom
        description: User id age has to be greater than 21 years.
        engine: dqx
        specification:
          criticality: error
          check:
            function: is_aggr_not_less_than
            arguments:
              column: user_profile.age
              aggr_type: min
              group_by:
                - user_id
              limit: 21
      - type: custom
        description: Check if you have exactly one line per hour.
        engine: dqx
        specification:
          criticality: error
          check:
            function: is_aggr_equal
            arguments:
              column: interaction_date
              aggr_type: count # other types: count, sum, min, max
              limit: 24
      - type: custom
        description: Check if you have exactly one line per hour.
        engine: dqx
        specification:
          criticality: error
          check:
            function: foreign_key
            arguments:
              columns:
                - user_id
              ref_columns:
                - id
              ref_df_name: df_user
      - type: custom
        description: Check if you have exactly one line per hour.
        engine: dqx
        specification:
          criticality: error
          check:
            function: foreign_key
            arguments:
              columns:
                - user_id
              ref_columns:
                - id
              ref_table: catalog1.schema1.user